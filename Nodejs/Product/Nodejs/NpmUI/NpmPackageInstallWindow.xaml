<ui:DialogWindowVersioningWorkaround
    x:Class="Microsoft.NodejsTools.NpmUI.NpmPackageInstallWindow"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:npmUi="clr-namespace:Microsoft.NodejsTools.NpmUI"
    xmlns:ui="clr-namespace:Microsoft.VisualStudioTools"
    xmlns:wpf="clr-namespace:Microsoft.VisualStudioTools.Wpf"
    Title="Install New npm Modules"
    Height="500"
    MinHeight="500"
    Width="600"
    MinWidth="600"
    WindowStartupLocation="CenterOwner"
    Background="{DynamicResource {x:Static wpf:Controls.BackgroundKey}}"
    ResizeMode="CanResizeWithGrip">
    <!-- Theming -->
    <Window.Resources>
        <ResourceDictionary>
            <Geometry x:Key="SearchGeometry">F1 M 8.5,7.0 C 7.12,7.00 6.0,5.88 6.0,4.5 C 6.0,3.12 7.12,2.0 8.5,2.0 C 9.88,2.0 11.0,3.12 11.0,4.5 C 11.0,5.88 9.88,7.0 8.5,7.0 Z M 8.5,0.0 C 6.02,0.0 4.0,2.02 4.0,4.500 C 4.0,5.23 4.19,5.9 4.49,6.5 L 0.0,11.0 L 2.0,13.0 L 6.49,8.51 C 7.1,8.81 7.77,9.0 8.5,9.0 C 11.0,9.0 13.0,7.0 13.0,4.5 C 13.0,2.02 11.0,0.0 8.5,0.0 Z</Geometry>
            <Style x:Key="SearchStyle" TargetType="ContentControl">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Path Data="{StaticResource SearchGeometry}" Fill="{DynamicResource {x:Static wpf:Controls.SearchGlyphBrushKey}}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 4 0" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="pack://application:,,,/Microsoft.NodejsTools;component/SharedProject/Wpf/Controls.xaml" />
                <ResourceDictionary>
                    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                    </Style>

                    <DataTemplate DataType="{x:Type npmUi:ReadOnlyPackageCatalogEntryViewModel}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <!-- Name/Version/Author -->
                                <RowDefinition Height="auto" />
                                <!-- Description -->
                                <RowDefinition Height="auto" />
                                <!-- Keywords/Install -->
                                <RowDefinition Height="auto" />
                                <!-- Separator -->
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Margin="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="{Binding Name,Mode=OneWay}"
                                           TextTrimming="CharacterEllipsis"
                                           ToolTip="{Binding Name,Mode=OneWay}"
                                           FontWeight="Bold" />

                                <TextBlock Grid.Column="1"
                                           Margin="3 0 0 0"
                                           Text="{Binding Version,Mode=OneWay}" />

                                <TextBlock Grid.Column="3"
                                           Text="{Binding Author,Mode=OneWay}"
                                           TextTrimming="CharacterEllipsis"
                                           ToolTip="{Binding Author,Mode=OneWay}"
                                           Opacity="0.6" />
                            </Grid>

                            <TextBlock Grid.Row="1"
                                       Margin="3"
                                       Text="{Binding Description,Mode=OneWay}"
                                       TextWrapping="Wrap" 
                                       TextTrimming="CharacterEllipsis" Height="30"/>

                            <Grid Grid.Row="2" Margin="3 6 3 3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="1"
                                           x:Name="LocalInstallMessage"
                                           Visibility="Collapsed"
                                           FontWeight="Bold">
                                    Installed locally
                                </TextBlock>
                                <TextBlock Grid.Column="1"
                                           x:Name="LocalInstallOutOfDateMessage"
                                           Visibility="Collapsed"
                                           FontWeight="Bold"
                                           Foreground="Red">
                                    <Run>Old version</Run>
                                    <Run Text="{Binding LocalVersion,Mode=OneWay}" />
                                    <Run>installed locally</Run>
                                </TextBlock>
                                <TextBlock Grid.Column="2"
                                           x:Name="InstallMessageSeparator"
                                           Visibility="Collapsed">
                                    <Run xml:space="preserve">; </Run>
                                </TextBlock>

                                <TextBlock Grid.Column="3"
                                           x:Name="GlobalInstallMessage"
                                           Visibility="Collapsed"
                                           FontWeight="Bold">
                                    Installed globally
                                </TextBlock>
                                <TextBlock Grid.Column="3"
                                           x:Name="GlobalInstallOutOfDateMessage"
                                           Visibility="Collapsed"
                                           FontWeight="Bold"
                                           Foreground="Red">
                                    <Run>Old version</Run>
                                    <Run Text="{Binding GlobalVersion,Mode=OneWay}" />
                                    <Run>installed globally</Run>
                                </TextBlock>
                            </Grid>

                            <Separator Grid.Row="3" Margin="0 4 0 2" />

                            <Grid.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick"
                                              Command="{x:Static npmUi:NpmPackageInstallViewModel.InstallCommand}"
                                              CommandParameter="{Binding}" />
                            </Grid.InputBindings>
                        </Grid>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsInstalledLocally}" Value="true">
                                <Setter TargetName="LocalInstallMessage" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLocalInstallOutOfDate}" Value="true">
                                <Setter TargetName="LocalInstallMessage" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="LocalInstallOutOfDateMessage" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsInstalledGlobally}" Value="true">
                                <Setter TargetName="GlobalInstallMessage" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsGlobalInstallOutOfDate}" Value="true">
                                <Setter TargetName="GlobalInstallMessage" Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="GlobalInstallOutOfDateMessage" Property="Visibility" Value="Visible" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsInstalledLocally}" Value="true" />
                                    <Condition Binding="{Binding IsInstalledGlobally}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="InstallMessageSeparator" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type npmUi:LastRefreshedMessageProvider}">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                       Margin="0 0 3 0"
                                       VerticalAlignment="Center">
                                Catalog Updated
                            </TextBlock>
                            <TextBlock Grid.Column="1"
                                       x:Name="Message"
                                       Text="{Binding Description}"
                                       VerticalAlignment="Center" />
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsAncient}" Value="True">
                                <Setter TargetName="Message" Property="Foreground" Value="Red" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOld}" Value="True">
                                <Setter TargetName="Message" Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>

                    <DataTemplate DataType="{x:Type npmUi:NpmOutputViewModel}">
                        <Ellipse x:Name="StatusIcon" Width="14" Height="14" Stroke="Gray" StrokeThickness="1" Margin="0 0 2 0" VerticalAlignment="Center"/>

                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding WithErrors}" Value="True">
                                <Setter TargetName="StatusIcon" Property="Fill" Value="Red"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding WithErrors}" Value="False">
                                <Setter TargetName="StatusIcon" Property="Fill" Value="#80B5FFA9"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="Close_Executed"
                        CanExecute="Close_CanExecute" />
        <CommandBinding Command="{x:Static npmUi:NpmPackageInstallViewModel.InstallCommand}"
                        Executed="InstallCommand_Executed"
                        CanExecute="InstallCommand_CanExecute" />
        <CommandBinding Command="{x:Static npmUi:NpmPackageInstallViewModel.RefreshCatalogCommand}"
                        Executed="RefreshCatalogCommand_Executed"
                        CanExecute="RefreshCatalogCommand_CanExecute" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Command="{x:Static npmUi:NpmPackageInstallViewModel.InstallCommand}" Gesture="ENTER" />
    </Window.InputBindings>

    <Grid VerticalAlignment="Stretch"
                   Height="Auto"
                   HorizontalAlignment="Stretch"
                   Width="Auto"
                   Margin="4 4 4 4">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ProgressBar Name="_progress"
                             Height="4"
                             IsIndeterminate="true"
                             Visibility="{Binding Path=ExecuteViewModel.ExecutionProgressVisibility}" Grid.Row="1" Grid.ColumnSpan="2"/>
            <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">
                <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="4" Orientation="Horizontal">

                    <ContentControl Content="{Binding ExecuteViewModel}" Focusable="False" IsTabStop="False"/>

                    <Button x:Name="npmInstallOutputLink"
                            Style="{StaticResource NavigationButton}"
                            Click="ShowOutputWindow_Click"
                            KeyboardNavigation.TabIndex="9"
                            ContentStringFormat="{}npm install Output: {0}"
                            Content="{Binding ExecuteViewModel.StatusText}" />
                </StackPanel>
            </StackPanel>

            <Button x:Name="CloseButton"
                        Grid.Column="1"
                        Command="ApplicationCommands.Close"
                        IsCancel="True"
                        KeyboardNavigation.TabIndex="7">
                _Close
            </Button>
        </Grid>

        <Grid Visibility="{Binding FilterControlsVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="30" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*"/>
                <ColumnDefinition Width="7*"/>
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Grid.Row="0"
                             x:Name="FilterTextBox"
                             IsVisibleChanged="FilterTextBox_IsVisibleChanged"
                             Height="24"
                             Text="{Binding FilterText,UpdateSourceTrigger=PropertyChanged}"
                             PreviewKeyDown="FilterTextBox_PreviewKeyDown"
                             KeyboardNavigation.TabIndex="0"/>
            <ContentControl Style="{StaticResource SearchStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsTabStop="False" Focusable="False"/>
            <ListView x:Name="_packageList"
                          Grid.Row="1"
                          ItemsSource="{Binding FilteredPackages}"
                          SelectedItem="{Binding SelectedPackage}"
                          SelectionChanged="_packageList_SelectionChanged"
                          PreviewKeyDown="_packageList_PreviewKeyDown"
                          HorizontalContentAlignment="Stretch"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          MinHeight="0"
                          KeyboardNavigation.TabIndex="1" />




            <Grid Grid.Row="2" VerticalAlignment="Top" Margin="0 4 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!-- Package cache control -->


                <ContentControl Grid.Column="0"
                                    Content="{Binding LastRefreshedMessage}"
                                    Foreground="{DynamicResource {x:Static wpf:Controls.ForegroundKey}}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    Focusable="False"
                                    IsTabStop="False"/>

                <Button Grid.Column="1" HorizontalAlignment="Right" Margin="0"
                        Name="RefreshButton"
                        Command="{x:Static npmUi:NpmPackageInstallViewModel.RefreshCatalogCommand}"
                        KeyboardNavigation.TabIndex="8"
                        xml:space="preserve">Refresh</Button>
            </Grid>

            <Grid Grid.Column="1" Grid.RowSpan="2" Margin="8 0 0 0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Name="PackageInfo">
                        <TextBlock>
                            <TextBlock FontSize="15pt" FontWeight="Bold" Text="{Binding Path=SelectedPackage.Name, Mode=OneWay}"></TextBlock>
                            <TextBlock Text="{Binding Path=SelectedPackage.Version, Mode=OneWay}"/>
                        </TextBlock>

                        <TextBlock Margin="0 4 0 4"
                            Text="{Binding SelectedPackage.Keywords, Mode=OneWay}"
                            TextWrapping="Wrap"
                            Opacity="0.5" />

                        <StackPanel Orientation="Horizontal" Margin="0 4 0 4" x:Name="AuthorBlock" Visibility="{Binding SelectedPackage.AuthorVisibility, Mode=OneWay}">
                            <TextBlock FontWeight="Bold">Author:</TextBlock>
                            <TextBlock Text="{Binding Path=SelectedPackage.Author, Mode=OneWay}"/>
                        </StackPanel>

                        <StackPanel Margin="0 4 0 4" x:Name="HomepageBlock"
                                    Visibility="{Binding SelectedPackage.HomepageVisibility}"
                                    Orientation="Horizontal">
                            <TextBlock FontWeight="Bold">Homepage:</TextBlock>
                            <Button x:Name="HomepageLink" Style="{StaticResource NavigationButton}"
                                    Content="{Binding Path=SelectedPackage.Homepage, Mode=OneWay}"
                                    Click="HomepageLink_Click"
                                    KeyboardNavigation.IsTabStop="False"
                                    Margin="0"
                                    Padding="0"/>
                        </StackPanel>

                        <StackPanel Margin="0 4 0 4" Orientation="Horizontal" x:Name="DescriptionBlock" Visibility="{Binding SelectedPackage.DescriptionVisibility, Mode=OneWay}">
                             <TextBlock FontWeight="Bold">Description:</TextBlock>
                            <TextBlock Text="{Binding Path=SelectedPackage.Description, Mode=OneWay}"/>
                        </StackPanel>

                    </StackPanel>
                </ScrollViewer>

                <StackPanel Grid.Row="1"
                        Orientation="Vertical"
                        HorizontalAlignment="Stretch">
                    <Separator/>
                    <Grid x:Name="InstallOptions" DockPanel.Dock="Top" VerticalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Style="{StaticResource TooltipBorder}"
                        Visibility="{Binding GlobalWarningVisibility}" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch"
                               Foreground="{DynamicResource {x:Static wpf:Controls.TooltipTextKey}}" TextWrapping="Wrap">
                        <Run FontWeight="Bold">Warning:</Run> Global installs
                        will affect other apps that use packages via 'npm link'.
                            </TextBlock>
                        </Border>
                        <Button x:Name="InstallButton"
                            Grid.Column="0" Grid.ColumnSpan="2"
                            Grid.Row="6"
                            Content="Install"
                                    Margin="4"
                            Height="30"
                            Command="{x:Static npmUi:NpmPackageInstallViewModel.InstallCommand}"
                            CommandParameter="{Binding SelectedPackage}"
                            KeyboardNavigation.TabIndex="6"/>

                        <TextBlock Grid.Row="1" FontWeight="Bold" Padding="4">Options</TextBlock>
                        <Label Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center">Other npm arguments</Label>
                        <TextBox x:Name="ArgumentsTextBox" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Stretch" Text="{Binding Arguments}" Margin="4" TabIndex="5"/>
                        <Label Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center">Add to package.json</Label>
                        <CheckBox x:Name="SaveToPackageJsonCheckbox" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Left" IsChecked="{Binding SaveToPackageJson}" Margin="4" TabIndex="4">(recommended)</CheckBox>
                        <Label Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center">Dependency type</Label>

                        <ComboBox Name="DependencyComboBox"
                                  Grid.Row="2"
                                  Grid.Column="1"
                                  Width="100"
                                  MaxHeight="24"
                                      Margin="4"
                                  KeyboardNavigation.TabIndex="3" SelectedIndex="{Binding SelectedDependencyTypeIndex}"
                              HorizontalAlignment="Left">
                            <ComboBoxItem Tag="St" IsSelected="True">Standard</ComboBoxItem>
                            <ComboBoxItem Tag="Dev">Development</ComboBoxItem>
                            <ComboBoxItem Tag="Opt">Optional</ComboBoxItem>
                            <ComboBoxItem Tag="Global">Global</ComboBoxItem>
                        </ComboBox>

                    </Grid>

                </StackPanel>
            </Grid>

            <!-- Cache control and output -->
            <!-- (Together in the same grid so the splitter works) -->

        </Grid>

        <Grid Visibility="{Binding LoadingCatalogControlVisibility}">
            <StackPanel 
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center">

                <Label Content="{Binding LoadingCatalogMessage}"
                           HorizontalAlignment="Center"
                           HorizontalContentAlignment="Center" />

                <ProgressBar Height="16"
                                 Margin="50, 4, 50, 4"
                                 IsIndeterminate="True"
                                 IsEnabled="{Binding IsLoadingCatalog}" />
            </StackPanel>
        </Grid>

    </Grid>

</ui:DialogWindowVersioningWorkaround>

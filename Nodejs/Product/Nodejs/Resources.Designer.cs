//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.NodejsTools {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.NodejsTools.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port used to communicate with the debugger.
        /// </summary>
        internal static string DebuggerPort {
            get {
                return ResourceManager.GetString("DebuggerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies environment variables to be set in the spawned process in the form NAME=value;NAME1=value.
        /// </summary>
        internal static string EnvironmentVariables {
            get {
                return ResourceManager.GetString("EnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid port number - the port should contain only digits..
        /// </summary>
        internal static string InvalidPortNumber {
            get {
                return ResourceManager.GetString("InvalidPortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the URL to open in the browser.  If unspecified http://localhost:port is used.\r\nIf a port is specified, it needs to be specified here as well..
        /// </summary>
        internal static string LaunchUrlToolTip {
            get {
                return ResourceManager.GetString("LaunchUrlToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments to Node.exe.
        /// </summary>
        internal static string NodeExeArguments {
            get {
                return ResourceManager.GetString("NodeExeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        internal static string NodeExeArgumentsDescription {
            get {
                return ResourceManager.GetString("NodeExeArgumentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        internal static string NodeExeArgumentsToolTip {
            get {
                return ResourceManager.GetString("NodeExeArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your project is currently configured to look for Node.exe at &quot;{0}&quot; but the file does not exist..
        /// </summary>
        internal static string NodeExeDoesntExist {
            get {
                return ResourceManager.GetString("NodeExeDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.exe path.
        /// </summary>
        internal static string NodeExePath {
            get {
                return ResourceManager.GetString("NodeExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Node.js interpreter does not exist..
        /// </summary>
        internal static string NodeExePathNotFound {
            get {
                return ResourceManager.GetString("NodeExePathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to the node.exe executable..
        /// </summary>
        internal static string NodeExePathToolTip {
            get {
                return ResourceManager.GetString("NodeExePathToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js does not appear to be installed.  Please download and install Node.js or configure a projects properties page so that it points to where you have installed node.exe..
        /// </summary>
        internal static string NodejsNotInstalled {
            get {
                return ResourceManager.GetString("NodejsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js has not been detected on your computer.
        /// </summary>
        internal static string NodejsNotInstalledShort {
            get {
                return ResourceManager.GetString("NodejsNotInstalledShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Port.
        /// </summary>
        internal static string NodejsPort {
            get {
                return ResourceManager.GetString("NodejsPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port number used for process.env.port, if unspecified a random port is generated..
        /// </summary>
        internal static string NodejsPortToolTip {
            get {
                return ResourceManager.GetString("NodejsPortToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Tools for Visual Studio.
        /// </summary>
        internal static string NodejsToolsForVisualStudio {
            get {
                return ResourceManager.GetString("NodejsToolsForVisualStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cancelled.
        /// </summary>
        internal static string NpmCancelled {
            get {
                return ResourceManager.GetString("NpmCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} cancelled with errors - see Output window for details.
        /// </summary>
        internal static string NpmCancelledWithErrors {
            get {
                return ResourceManager.GetString("NpmCancelledWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} completed with errors - see Output window for details.
        /// </summary>
        internal static string NpmCompletedWithErrors {
            get {
                return ResourceManager.GetString("NpmCompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} successfully completed.
        /// </summary>
        internal static string NpmSuccessfullyCompleted {
            get {
                return ResourceManager.GetString("NpmSuccessfullyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yesterday at {0}.
        /// </summary>
        internal static string PackageCatalogRefresh1Day {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 month ago.
        /// </summary>
        internal static string PackageCatalogRefresh1Month {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 week ago.
        /// </summary>
        internal static string PackageCatalogRefresh1Week {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} days ago.
        /// </summary>
        internal static string PackageCatalogRefresh2To7Days {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2To7Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 2 weeks ago.
        /// </summary>
        internal static string PackageCatalogRefresh2Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 months ago.
        /// </summary>
        internal static string PackageCatalogRefresh3Months {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 weeks ago.
        /// </summary>
        internal static string PackageCatalogRefresh3Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Far too long ago.
        /// </summary>
        internal static string PackageCatalogRefresh6Months {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh6Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently refreshing.
        /// </summary>
        internal static string PackageCatalogRefreshing {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string PackageCatalogRefreshNever {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today at {0}.
        /// </summary>
        internal static string PackageCatalogRefreshODays {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshODays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the arguments passed to the script on launch..
        /// </summary>
        internal static string ScriptArgumentsToolTip {
            get {
                return ResourceManager.GetString("ScriptArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked a web browser is opened on launch.
        /// </summary>
        internal static string StartBrowserToolTip {
            get {
                return ResourceManager.GetString("StartBrowserToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified working directory is invalid or missing..
        /// </summary>
        internal static string WorkingDirInvalidOrMissing {
            get {
                return ResourceManager.GetString("WorkingDirInvalidOrMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the working directory where the node.exe process is launched..
        /// </summary>
        internal static string WorkingDirToolTip {
            get {
                return ResourceManager.GetString("WorkingDirToolTip", resourceCulture);
            }
        }
    }
}
